{"ast":null,"code":"var _jsxFileName = \"/Users/saikenho/javascript/01-starting-project 2/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  itme: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n}; //this is the cart provider context that wraps all the data so it can be used in multiple components \n\n\nconst CartProvider = props => {\n  _s();\n\n  // call use reducer \n  useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {};\n\n  const removeItemCartHandler = id => {};\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemCartHandler\n  }; // wraps all the children \n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"9qmXNhHwCNxTUI0SNXt8aqly3Ac=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/saikenho/javascript/01-starting-project 2/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","itme","totalAmount","cartReducer","state","action","CartProvider","props","addItemToCartHandler","item","removeItemCartHandler","id","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAC;AACvBC,EAAAA,IAAI,EAAC,EADkB;AAEvBC,EAAAA,WAAW,EAAC;AAFW,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACnC,SAAOL,gBAAP;AACC,CAFD,C,CAGA;;;AACA,MAAMM,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACAT,EAAAA,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAV;;AACA,QAAMQ,oBAAoB,GAAGC,IAAI,IAAI,CAAG,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAO,CAAE,CAAvC;;AAEA,QAAMC,WAAW,GAAC;AACdC,IAAAA,KAAK,EAAC,EADQ;AAEdX,IAAAA,WAAW,EAAC,CAFE;AAGdY,IAAAA,OAAO,EAACN,oBAHM;AAIdO,IAAAA,UAAU,EAACL;AAJG,GAAlB,CAP4B,CAc5B;;AACJ,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFL,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAIC,CAnBD;;GAAMV,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import {useReducer} from 'react';\nimport CartContext from './cart-context';\n\n\nconst defaultCartState={ \nitme:[], \ntotalAmount:0,\n};\n\nconst cartReducer=(state,action)=> { \nreturn defaultCartState\n};\n//this is the cart provider context that wraps all the data so it can be used in multiple components \nconst CartProvider = (props) => {\n    // call use reducer \n    useReducer(cartReducer,defaultCartState)\n    const addItemToCartHandler = item => { };\n\n    const removeItemCartHandler = (id)=> {};\n\n    const cartContext={ \n        items:[], \n        totalAmount:0, \n        addItem:addItemToCartHandler ,\n        removeItem:removeItemCartHandler,\n\n    };\n    // wraps all the children \nreturn <CartContext.Provider value={cartContext}>\n    {props.children }\n</CartContext.Provider>\n\n}; \nexport default CartProvider; "]},"metadata":{},"sourceType":"module"}